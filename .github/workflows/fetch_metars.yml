name: ⛅ METAR Fetch ⛈️

on:
  schedule:
    # Run every 4 minutes (fastest possible without overlap)
    - cron: "*/4 * * * *"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: metar-fetch-clean-4min
  cancel-in-progress: true

jobs:
  fetch_and_clean:
    name: 📡 Fetch → 🧹 Clean → 📊 Summarize (every 4 min)
    runs-on: ubuntu-latest

    container:
      image: rocker/tidyverse:4.3.3

    defaults:
      run:
        working-directory: ${{ github.workspace }}

    steps:
      - name: 🕒 Log UTC start
        shell: bash
        run: |
          echo "Triggered at: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"

      - name: 🛎️ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: 🔐 Trust workspace for Git
        run: |
          git config --global --add safe.directory '*'
          git rev-parse --is-inside-work-tree

      - name: 🔍 Sanity check workspace
        run: |
          echo "GITHUB_WORKSPACE=${GITHUB_WORKSPACE}"
          pwd
          ls -la
          test -d .git || (echo "::error::.git not found" && exit 1)

      - name: 📦 Ensure required R packages are installed
        run: |
          Rscript -e 'need <- c("here","httr","jsonlite","tibble","dplyr","lubridate","readr","optparse");
                      missing <- need[!(need %in% rownames(installed.packages()))];
                      if(length(missing)) install.packages(missing, repos="https://cloud.r-project.org", quiet=TRUE)'

      - name: 📝 Run METAR fetch script
        run: Rscript Fetch_METARs.R

      - name: 🧹 Run cleaning script
        run: Rscript Clean_METARs.R

      - name: 📊 Run summaries script
        run: Rscript METAR_Summaries.R

      - name: 📂 List generated outputs
        run: ls -lh Data/METARs Data/Summaries || true

      - name: 💾 Commit and push updated files
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add Data/METARs/*.csv Data/METARs/*.txt Data/Summaries/*.csv Data/Summaries/*.txt || true

          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Fetch, Clean & Summarize METARs $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            git pull --rebase origin main || true
            git push --force-with-lease origin main
          else
            echo "No changes to commit."
          fi
